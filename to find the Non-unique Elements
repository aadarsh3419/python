from collections.abc import Iterable
##in this first we we create a variable which store the values 
then we create a loop to see the length of the data 
then we create a count variable to count the values which is same 
then we create a onece more loop to see the length of the data
then we give a condtion to see if the data has same index value or not if it is have same value 
then we add it to count 
then we append it with result which is variable that we create early
then we print the result 
know over function is ready to go

def checkio(data: list[int]) -> Iterable[int]:
    result = []
    for i in range(len(data)):
        count = 0
        for j in range(len(data)):
            if data[i] == data[j]:
                count+=1
        if count > 1:
            result.append(data[i])
    return result


print("Example:")
print(list(checkio([1, 2, 3, 1, 3])))

# These "asserts" are used for self-checking
assert list(checkio([1, 2, 3, 1, 3])) == [1, 3, 1, 3]
assert list(checkio([1, 2, 3, 4, 5])) == []
assert list(checkio([5, 5, 5, 5, 5])) == [5, 5, 5, 5, 5]
assert list(checkio([10, 9, 10, 10, 9, 8])) == [10, 9, 10, 10, 9]
assert list(checkio([2, 2, 3, 2, 2])) == [2, 2, 2, 2]
assert list(checkio([10, 20, 30, 10])) == [10, 10]
assert list(checkio([7])) == []
assert list(checkio([0, 1, 2, 3, 4, 0, 1, 2, 4])) == [0, 1, 2, 4, 0, 1, 2, 4]
assert list(checkio([99, 98, 99])) == [99, 99]
assert list(checkio([0, 0, 0, 1, 1, 100])) == [0, 0, 0, 1, 1]
assert list(checkio([0, 0, 0, -1, -1, 100])) == [0, 0, 0, -1, -1]

print("The mission is done! Click 'Check Solution' to earn rewards!")
